{
    "collab_server" : "",
    "contents" : "# 00 Before we get started\n1. Working Directory\n2. RStudio to manage WD\n    - Open RStudio\n    - Create Project data-carpentry\n    - Create data/ and download data into it\n    - Create data-carpentry-script.R\n    - Show diagram\n3. RStudio walk-through\n    - Panes\n    - Auto-complete\n    - R Code\n        - Code is instructions to computer: 2-ways\n        - Console\n            - prompt (> vs +)\n            - ESC\n        - Script to console (buttons and ctrl-enter)\n4.  Basics of R\n    - Free and Open Source\n    - Better than commercial\n        - First implementations\n        - widely extensible (nrow(available.packages()))\n    - 1000's of developers vs 10's-100's\n    - huge and (mostly) friendly community\n    - functional and OO\n    - not just for stats, general purpose programming too.\n5. R Syntax\n    - http://www.datacarpentry.org/R-ecology-lesson/00-before-we-start.html#the-r-syntax\n    - comments\n    - assignment operator\n    - a function\n    - = for args\n    - $\n    - quotes v not quotes\n6. Using functions\n    - round\n    - args(round)\n    - show multiple args\n        - named (orderd, not ordered)\n        - not-named\n7. The most important skill in coding: HELP!\n    - https://twitter.com/ThePracticalDev/status/716390583217029124\n    - When you know the function\n        - ? or help\n        - args\n        - RStudio auto-complete\n    - When you know the package\n        - help(package=\"dplyr\")\n    - When you know a bit of the topic\n        - ??smirnov\n        - ??histogram\n    - Google and Stackoverflow\n        - Asking good questions (see http://www.datacarpentry.org/R-ecology-lesson/00-before-we-start.html#asking-for-help)\n    - Mailing Lists\n    - Task Views\n    \n## 01 Intro to R\n1. Creating Objects\n    - Basic operators +, -, *, / \n    - can save result to an object with <- \n    - weight_kg <- 55\n    - (weight_kg <- 55)\n    - weight_kg <- 55; weight_kg\n    - overwrite value\n    - use math to change (*2.2 for lbs)\n    - weight_lbs <- 2.2 * weight_kg\n2. Challenge\n    - work with person next to you\n    - discuss what you think values would be\n    - confirm using R\n    - About 5 minutes\n3. Vectors and data types\n    - Vector\n        - most basic structure\n        - have length\n        - have type (must be the same)\n    - weight_g <- c(50, 60, 65, 82)\n    - weight_g\n    - animals <- c(\"mouse\", \"rat\", \"dog\")\n    - animals\n    - length(), class(), str()\n    - add to the vector (beginning and end)\n        - c(animals,\"\")\n    - types\n        - numeric\n        - character\n        - logical/boolean\n        - integer\n        - raw\n        - complex\n    - Other data structures\n        - list\n        - matrix\n        - factor\n        - data.frame\n4. Challenge\n    - Work on together\n    - Weâ€™ve seen that atomic vectors can be of type character, numeric, integer, and logical. But what happens if we try to mix these types in a single vector?\n        - coercion\n    - What class will these be?\n    - num_char <- c(1, 2, 3, 'a')\n    - num_logical <- c(1, 2, 3, TRUE)\n    - char_logical <- c('a', 'b', 'c', TRUE)\n    - tricky <- c(1, 2, 3, '4')\n    - c(3,\"z\",TRUE)\n    - so: \n      - Logical > Numeric\n      - Logical > Character\n      - Character > Numeric\n      - Character > Numeric + Logical\n5. Subsetting\n    - animals <- c(\"mouse\", \"rat\", \"dog\", \"cat\")\n    - animals[2]\n    - animals[c(3,2)]\n    - animals[c(1, 2, 3, 2, 1, 4)]\n    - animals[-3]\n6. Conditional subsetting\n    - weight_g <- c(21, 34, 39, 54, 55)\n    - Subset based on logical\n        - weight_g[c(TRUE, FALSE, TRUE, TRUE, FALSE)]\n    - so we can use conditional statements such as\n        - weight_g > 50 \n        - weight_g[weight_g > 50]\n        - or: weight_g[weight_g < 30 | weight_g > 50]\n        - and: weight_g[weight_g >= 30 & weight_g == 21]\n    - Works with both numeric and character\n        - animals[animals == \"cat\" | animals == \"rat\"]\n        - %in%: animals %in% c(\"rat\", \"cat\", \"dog\", \"duck\")\n        - animals[animals %in% c(\"rat\", \"cat\", \"dog\", \"duck\")]\n7. Challenge:\n    - what does \"four\" > \"five\" return?\n    - why?\n8. Missing Data",
    "created" : 1469208239184.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "152799771",
    "id" : "54BA8CDC",
    "lastKnownWriteTime" : 1469214336,
    "last_content_update" : 1469214336472,
    "path" : "~/projects/dc_r/jeff_dc_crib_notes.md",
    "project_path" : "jeff_dc_crib_notes.md",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "markdown"
}